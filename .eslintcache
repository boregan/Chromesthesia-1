[{"C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\index.js":"1","C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\App.js":"2","C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\reportWebVitals.js":"3","C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\Components\\Chromesthesia.js":"4","C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\Components\\sketch.js":"5","C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\Components\\sketch2.js":"6","C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\Components\\sketch3.js":"7"},{"size":500,"mtime":1625657116064,"results":"8","hashOfConfig":"9"},{"size":154,"mtime":1628087465151,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1625657116064,"results":"11","hashOfConfig":"9"},{"size":11461,"mtime":1632965153936,"results":"12","hashOfConfig":"9"},{"size":1280,"mtime":1633012777735,"results":"13","hashOfConfig":"9"},{"size":3864,"mtime":1632963717715,"results":"14","hashOfConfig":"9"},{"size":2203,"mtime":1633012869641,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"19hau4i",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\index.js",[],["33","34"],"C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\App.js",[],"C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\reportWebVitals.js",[],"C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\Components\\Chromesthesia.js",["35"],"import React, { Component } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// P5 \r\nimport P5Wrapper from 'react-p5-wrapper';\r\nimport sketch from \"./sketch\";\r\nimport sketch2 from \"./sketch2\";\r\nimport sketch3 from \"./sketch3\";\r\n\r\n// Tone.js\r\nimport * as Tone from \"tone\";\r\n\r\n// Colour Picker \r\nimport { ColorPicker } from 'material-ui-color';\r\nimport \"./../style.css\";\r\n\r\n// HTML to Image\r\nimport * as htmlToImage from 'html-to-image';\r\nimport download from 'downloadjs';\r\n\r\n// Misc\r\nimport stringifyObject from 'stringify-object';\r\nimport { CSVLink } from 'react-csv';\r\n\r\n///////////////////////////////////////////////////\r\n\r\nconst synth = new Tone.PolySynth().toDestination();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(6, 6),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  color: {\r\n    width: '36px',\r\n    height: '14px',\r\n    borderRadius: '2px',\r\n    background: 'rgb(0,0,0)',\r\n  },\r\n});\r\n\r\nclass Chromesthesia extends Component {\r\n  constructor() {\r\n    super();\r\n    this.wrapper = React.createRef();\r\n\r\n    // Props to send to P5 Sketch\r\n    this.state = {\r\n      p5Colour: '#D82B2E',\r\n      sketch: sketch,\r\n      \r\n      // Default Colour Values\r\n      c : '#D82B2E',\r\n      db: '#DB6335',\r\n      d : '#E78D37',\r\n      eb: '#F2CB33',\r\n      e : '#F6E95F',\r\n      f : '#C0D65C',\r\n      gb: '#009f47',\r\n      g : '#009890',\r\n      ab: '#2a327f',\r\n      a : '#a892a4',\r\n      bb: '#c42c82',\r\n      b : '#a12c56'\r\n    };\r\n    // Key bind handler \r\n    this.handleKey = this.handleKey.bind(this);\r\n  }\r\n\r\n  playNote(note) {\r\n    synth.triggerAttackRelease(`${note}`, \"8n\");\r\n    var colourForNotes = { \r\n      'C4' :  this.state.c, \r\n      'C#4':  this.state.db,\r\n      'D4' :  this.state.d,\r\n      'D#4':  this.state.eb,\r\n      'E4' :  this.state.e,\r\n      'F4' :  this.state.f,\r\n      'F#4':  this.state.gb,\r\n      'G4' :  this.state.g,\r\n      'G#4':  this.state.ab,\r\n      'A4' :  this.state.a,\r\n      'A#4':  this.state.bb,\r\n      'B4' :  this.state.b,\r\n    };\r\n    this.setState({p5Colour: colourForNotes[note]});\r\n  }\r\n\r\n  // Binding keyboard keys to Tone.js \r\n  handleKey = (e) => {\r\n    if(e.keyCode === 65) {\r\n      this.playNote(\"C4\");\r\n    } else if (e.keyCode === 87 ) {\r\n      this.playNote(\"C#4\");\r\n    } else if (e.keyCode === 83 ) {\r\n      this.playNote(\"D4\");\r\n    } else if (e.keyCode === 69 ) {\r\n      this.playNote(\"D#4\");\r\n    } else if (e.keyCode === 68 ) {\r\n      this.playNote(\"E4\");\r\n    } else if (e.keyCode === 70 ) {\r\n      this.playNote(\"F4\");\r\n    } else if (e.keyCode === 84 ) {\r\n      this.playNote(\"F#4\");\r\n    } else if (e.keyCode === 71 ) {\r\n      this.playNote(\"G4\");\r\n    } else if (e.keyCode === 89 ) {\r\n      this.playNote(\"G#4\");\r\n    } else if (e.keyCode === 72 ) {\r\n      this.playNote(\"A4\");\r\n    } else if (e.keyCode === 85 ) {\r\n      this.playNote(\"A#4\");\r\n    } else if (e.keyCode === 74 ) {\r\n      this.playNote(\"B4\");\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKey);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKey);\r\n  }\r\n\r\n  pianoToImage() {\r\n    var domElement = document.getElementById('capture');\r\n    htmlToImage.toPng(domElement)\r\n\r\n      .then(function (dataUrl) {\r\n        console.log(dataUrl);\r\n        download(dataUrl, 'chromesthesia-keyboard.png');\r\n      })\r\n      .catch(function (error) {\r\n        console.error('oops, something went wrong!', error);\r\n      });\r\n  }\r\n\r\n  handleChange = (value, key) => {\r\n    // stringify-object to remove double quotes \r\n    var hex = stringifyObject(value.hex, {\r\n      doubleQuotes: false,\r\n    });\r\n    hex = hex.replace(/\\'/gi,'');\r\n\r\n    if(key === \"C\") {\r\n      this.setState({c: '#' + [hex]});\r\n    } else if (key === \"C#\") {\r\n      this.setState({db: '#' + [hex]});\r\n    } else if (key === \"D\") {\r\n      this.setState({d: '#' + [hex]});\r\n    } else if (key === \"D#\") {\r\n      this.setState({eb: '#' + [hex]});\r\n    } else if (key === \"E\") {\r\n      this.setState({e: '#' + [hex]});\r\n    } else if (key === \"F\") {\r\n      this.setState({f: '#' + [hex]});\r\n    } else if (key === \"F#\") {\r\n      this.setState({gb: '#' + [hex]});\r\n    } else if (key === \"G\") {\r\n      this.setState({g: '#' + [hex]});\r\n    } else if (key === \"G#\") {\r\n      this.setState({ab: '#' + [hex]});\r\n    } else if (key === \"A\") {\r\n      this.setState({a: '#' + [hex]});\r\n    } else if (key === \"A#\") {\r\n      this.setState({bb: '#' + [hex]});\r\n    } else if (key === \"B\") {\r\n      this.setState({b: '#' + [hex]});\r\n    } \r\n  };\r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n    var data = [\r\n      [\"Note\", \"Colour\"],\r\n      [\"C4\", this.state.c],\r\n      ['C#4', this.state.db],    \r\n      ['D4' , this.state.d],  \r\n      ['D#4', this.state.eb],    \r\n      ['E4' , this.state.e,],  \r\n      ['F4' , this.state.f],  \r\n      ['F#4', this.state.gb],    \r\n      ['G4' , this.state.g],  \r\n      ['G#4', this.state.ab],   \r\n      ['A4' , this.state.a,],  \r\n      ['A#4', this.state.bb],    \r\n      ['B4' , this.state.b] \r\n    ];\r\n\r\n    return (\r\n    <Grid container component=\"main\" ref={this.wrapper} >\r\n      <CssBaseline />\r\n      <Grid item xs={12} sm={12} md={12} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <P5Wrapper sketch={this.state.sketch} p5Colour={this.state.p5Colour} />  \r\n          <Grid item lg={8} md={8} xs={8} sm={8} mx=\"auto\"> \r\n\r\n          <Typography variant=\"overline\" display=\"block\">Form-Constants</Typography>\r\n          <Button size=\"small\" variant=\"contained\" onClick={() => this.setState({sketch: sketch})}> 1</Button>\r\n          <Button size=\"small\" variant=\"contained\" onClick={() => this.setState({sketch: sketch2})}> 2</Button>\r\n          <Button size=\"small\" variant=\"contained\" onClick={() => this.setState({sketch: sketch3})}> 3</Button>\r\n \r\n          <Button variant=\"outlined\" size=\"small\" style={{marginLeft: '2em'}} onClick={this.pianoToImage}>\r\n            Save Image\r\n          </Button>\r\n          <Button variant=\"outlined\" size=\"small\" onClick={this.pianoToCsv}>\r\n            <CSVLink\r\n              data={data}\r\n              filename={\"my-file.csv\"}\r\n              target=\"_blank\"\r\n            >\r\n              Save Data\r\n            </CSVLink>\r\n          </Button>     \r\n          </Grid>  \r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12}>\r\n      <div className=\"note-wrapper\" id='note-wrapper'>\r\n        <div id=\"capture\">\r\n          <button className=\"note white c1\" onClick={() => this.playNote(\"C4\")}>\r\n            <div className=\"picker\">\r\n              <ColorPicker \r\n                value={this.state.c} \r\n                onChange={(e) => this.handleChange(e, \"C\")}\r\n                disableTextfield \r\n                disableAlpha\r\n              />\r\n            </div>\r\n          </button>\r\n          <button className=\"note black\" onClick={() => this.playNote(\"C#4\")}>\r\n            <div className=\"picker-black\">\r\n              <ColorPicker \r\n                value={this.state.db} \r\n                onChange={(e) => this.handleChange(e, \"C#\")}\r\n                disableTextfield \r\n                disableAlpha\r\n              />\r\n              </div>\r\n          </button>\r\n\r\n          <button className=\"note white d\" onClick={() => this.playNote(\"D4\")}>\r\n            <div className=\"picker\">\r\n              <ColorPicker \r\n                value={this.state.d} \r\n                onChange={(e) => this.handleChange(e, \"D\")}\r\n                disableTextfield \r\n                disableAlpha\r\n              />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"note black\" onClick={() => this.playNote(\"D#4\")}>\r\n          <div className=\"picker-black\">\r\n              <ColorPicker \r\n                value={this.state.eb} \r\n                onChange={(e) => this.handleChange(e, \"D#\")}\r\n                disableTextfield \r\n                disableAlpha\r\n              />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"note white e\" onClick={() => this.playNote(\"E4\")}>\r\n          <div className=\"picker\">\r\n              <ColorPicker \r\n                value={this.state.e} \r\n                onChange={(e) => this.handleChange(e, \"E\")}\r\n                disableTextfield \r\n                disableAlpha\r\n              />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"note white f\" onClick={() => this.playNote(\"F4\")}>\r\n          <div className=\"picker\">\r\n              <ColorPicker \r\n                value={this.state.f} \r\n                onChange={(e) => this.handleChange(e, \"F\")}\r\n                disableTextfield \r\n                disableAlpha\r\n              />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"note black\" onClick={() => this.playNote(\"F#4\")}>\r\n            <div className=\"picker-black\">\r\n              <ColorPicker \r\n                value={this.state.gb} \r\n                onChange={(e) => this.handleChange(e, \"F#\")}\r\n                disableTextfield \r\n                disableAlpha\r\n              />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"note white g\" onClick={() => this.playNote(\"G4\")}>\r\n            <div className=\"picker\">\r\n                <ColorPicker \r\n                  value={this.state.g} \r\n                  onChange={(e) => this.handleChange(e, \"G\")}\r\n                  disableTextfield \r\n                  disableAlpha\r\n                />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"note black\" onClick={() => this.playNote(\"G#4\")}>\r\n            <div className=\"picker-black\">\r\n              <ColorPicker \r\n                value={this.state.ab} \r\n                onChange={(e) => this.handleChange(e, \"G#\")}\r\n                disableTextfield \r\n                disableAlpha\r\n              />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"note white a\" onClick={() => this.playNote(\"A4\")}>\r\n            <div className=\"picker\">\r\n              <ColorPicker \r\n                value={this.state.a} \r\n                onChange={(e) => this.handleChange(e, \"A\")}\r\n                disableTextfield \r\n                disableAlpha\r\n              />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"note black\" onClick={() => this.playNote(\"A#4\")}>\r\n            <div className=\"picker-black\">\r\n              <ColorPicker \r\n                value={this.state.bb} \r\n                onChange={(e) => this.handleChange(e, \"A#\")}\r\n                disableTextfield \r\n                disableAlpha\r\n              />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"note white b\" onClick={() => this.playNote(\"B4\")}>\r\n            <div className=\"picker\">\r\n              <ColorPicker \r\n                value={this.state.b} \r\n                onChange={(e) => this.handleChange(e, \"B\")}\r\n                disableTextfield \r\n                disableAlpha\r\n              />\r\n            </div>\r\n          </button>\r\n        </div>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Chromesthesia);","C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\Components\\sketch.js",[],"C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\Components\\sketch2.js",["36","37","38","39"],"import \"./../style.css\";\r\n\r\nexport default function sketch2 (p) {\r\n\tlet canvas;\r\n\r\n\tlet numDashers = 400;\r\n\tlet dashers = [];\r\n\tlet pts = [];\r\n\r\n\tlet n;\r\n\tlet rate;\r\n\tlet invrt;\r\n\tlet bins;\r\n\tlet offstsIndex;\r\n\tlet offsetPercentage;\r\n\tlet distC;\r\n\r\n\r\n\tlet a;\r\n\tlet x;\r\n\tlet y; \r\n\tlet z;\r\n\tlet d;\r\n\tlet sw;\r\n\r\n\tfunction drawPts(){\r\n\t\tfor (n = 0; n < numDashers; n++) {\r\n\t\t  p.stroke(255);\r\n\t\t  p.strokeWeight(2);\r\n\t\t  p.point(pts[n][0], pts[n][1]);\r\n\t\t}\r\n\t}\r\n\r\n\tp.setup = () => {\r\n\t\tp.remove();\r\n\t\tp.loop();\r\n\t\tcanvas = p.createCanvas(p.windowWidth-500, p.windowHeight - 350);\r\n\t\tp.frameRate(60);\r\n\t\tp.colorMode(p.HSB);\r\n\r\n\t\tp.stroke(0);\r\n\r\n\t\tfor (n = 0; n < numDashers; n++) {\r\n\t\t\tlet ang = p.map(n, 0, numDashers, 0, p.TAU);\r\n\t\t\tlet angX = 1200/2 + 50 * p.cos(ang);\r\n\t\t\tlet angY = 400/4 * 3  + 50 * p.sin(ang);\r\n\t\t\r\n\t\t\tlet offsts = p.map(n, 0, numDashers, -100, 100);\r\n\t\t\tlet randomness = p.random(-18, 18);\r\n\t\t\tif(n < numDashers / 4){\r\n\t\t\t  offsts= -120 + randomness;\r\n\t\t\t  rate = 0.01;\r\n\t\t\t  invrt = 1;\r\n\t\t\t} else if(n < numDashers / 2){\r\n\t\t\t  offsts = -45 + randomness;\r\n\t\t\t  rate = 0.015;\r\n\t\t\t  invrt = 0;\r\n\t\t\t}else if(n < numDashers / 4 * 3){\r\n\t\t\t  offsts = 45 + randomness;\r\n\t\t\t  rate = 0.02;\r\n\t\t\t  invrt = 1;\r\n\t\t\t}else{\r\n\t\t\t  offsts = 120 + randomness;\r\n\t\t\t  rate = 0.025;\r\n\t\t\t  invrt = 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbins = [-170, -110, -45, 34, 110];\r\n\t\t\toffstsIndex = p.floor(p.map(n, 0, numDashers, 0, 5));\r\n\t\t\tpts.push([angX, angY]);\r\n\t\t\tdashers.push(new makeDasher(1350 / 2, 600 / 2, rate, 200, bins[offstsIndex] + randomness,\r\n\t\t\t\t\t\t\t\t\t\tp.PI-1 + 0.57 * p.cos(ang),\r\n\t\t\t\t\t\t\t\t\t\tp.TAU + 1-0.57 * p.cos(ang), invrt));\r\n\t\t\t}\r\n\t};\r\n\tfunction makeDasher(cx,cy,rate,rad,offst,bg,eg, invert) {\r\n\t\tthis.invert = invert;\r\n\t\t\r\n\t\tthis.cx = cx;\r\n\t\tthis.cy = cy;\r\n\t\t\r\n\t\tthis.cp = p.random(p.TAU);\r\n\t\tthis.rate = rate;\r\n\t\t\r\n\t\tthis.rad = rad;\r\n\t\tthis.offset = offst;\r\n\t\t\r\n\t\tthis.segLength = p.random(0.01, 0.2);\r\n\t\t\r\n\t\tthis.beginAngle = bg;\r\n\t\tthis.endAngle = eg;\r\n\t\t\r\n\t\t\r\n\t\tif(this.invert){\r\n\t\t  this.beginAngle = eg;\r\n\t\t  this.endAngle = bg;\r\n\t\t}\r\n\t\tthis.midWayPoint = (this.beginAngle + this.endAngle)/2;\r\n\t\t\r\n\t\tthis.minD = p.dist(this.rad * p.cos(this.beginAngle), this.rad * p.sin(this.beginAngle), 0, 0 + this.rad);\r\n\t\tthis.maxD = p.dist(this.rad * p.cos(this.midWayPoint), this.rad * p.sin(this.midWayPoint), 0, 0 + this.rad);\r\n\t  \r\n\t\t\r\n\t\tthis.move = function () {\r\n\t\t\tp.push();\r\n\t\t\tp.translate(this.cx, this.cy);\r\n\t\t  \r\n\t\t  this.cp += this.rate;\r\n\t\t  if (this.cp > p.TAU) {\r\n\t\t\tthis.cp = 0;\r\n\t\t  }\r\n\t  \r\n\t\t  a = p.map(this.cp, 0, p.TAU, this.beginAngle, this.endAngle);\r\n\t\t  x = this.rad * p.cos(a);\r\n\t\t  y = this.rad * p.sin(a);\r\n\t  \r\n\t\t  d = p.dist(x, y, 0, 0 + this.rad);\r\n\t  \r\n\t\t  \r\n\t\t  sw = p.map(d, this.minD, this.maxD, 0, 8);\r\n\t\t  p.strokeWeight(sw);\r\n\t  \r\n\t\t  offsetPercentage = p.map(d, this.minD, this.maxD, 0, 1);\r\n\t  \r\n\t\t  x = (this.rad * 2 + this.offset) * p.cos(a);\r\n\t\t  y = (this.rad * 2 + this.offset) * p.sin(a);\r\n\t  \r\n\t\t  distC = p.dist(x, y, 0, 0) / 50 + a - this.cp * 3 + p.frameCount / 25;\r\n\t  \r\n\t\t  p.noFill();\r\n\t  \r\n\t\t  p.arc(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.rad * 2 + this.offset + 10 * p.sin(x / 20 + p.frameCount/25),\r\n\t\t\tthis.rad * 2 + this.offset + 10 * p.sin(x / 20 + p.frameCount/25),\r\n\t\t\ta - this.segLength * offsetPercentage,\r\n\t\t\ta\r\n\t\t  );\r\n\t\t  p.pop();\r\n\t\t};\r\n\t  }\r\n\r\n\tp.windowResized = () => {\r\n\t\tp.resizeCanvas(p.windowWidth -500, p.windowHeight - 350);\r\n\t};\r\n\r\n\tp.draw = () => {\r\n\t\t// NOTE: Do not use setState in the draw function or in functions that are executed\r\n\t\t// in the draw function...\r\n\r\n\t\t///////////////////////////////////////\r\n\t\tp.blendMode(p.BLEND);\r\n\t\tp.background(255, 20);\r\n\r\n\r\n\t\tfor (n=0; n < numDashers; n++) {\r\n\t\t\tdashers[n].move();\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t\r\n\tp.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n\t\t//Make sure the canvas has been created \r\n\t\tif (canvas) {\r\n\t\t\tp.stroke(newProps.p5Colour);\r\n\r\n\t\t}\r\n\t};\r\n}","C:\\Users\\Ben O'Regan\\Documents\\Masters\\Dissertation\\chromesthesia-3\\src\\Components\\sketch3.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":154,"column":24,"nodeType":"46","messageId":"47","endLine":154,"endColumn":25,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":16,"column":6,"nodeType":"51","messageId":"52","endLine":16,"endColumn":11},{"ruleId":"49","severity":1,"message":"53","line":22,"column":6,"nodeType":"51","messageId":"52","endLine":22,"endColumn":7},{"ruleId":"49","severity":1,"message":"54","line":26,"column":11,"nodeType":"51","messageId":"52","endLine":26,"endColumn":18},{"ruleId":"49","severity":1,"message":"55","line":63,"column":6,"nodeType":"51","messageId":"52","endLine":63,"endColumn":12},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["58","59"],"no-unused-vars","'distC' is assigned a value but never used.","Identifier","unusedVar","'z' is defined but never used.","'drawPts' is defined but never used.","'offsts' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"60","fix":"61","desc":"62"},{"messageId":"63","fix":"64","desc":"65"},"removeEscape",{"range":"66","text":"67"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"68","text":"69"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[4004,4005],"",[4004,4004],"\\"]